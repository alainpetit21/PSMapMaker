#ifndef _MATHFP_H_
#define _MATHFP_H_
/*==============================================================================================================*/
/*==============================================================================================================*/
/*==============================================================================================================*/
/*==============================================================================================================*/
#define FPP			8
#define IFP(x)		((x)<<FPP)
#define FP_ONE		IFP(1)
#define FPMUL(x,y)	(((x)*(y))>>FPP)
#define FPDIV(x,y)	(((x)<<FPP)/(y))
#define FP(x)		((int)((x)*FP_ONE+0.5f))
/*==============================================================================================================*/
/*==============================================================================================================*/
extern signed short s16Sin_Cos[256];
/*==============================================================================================================*/
/*==============================================================================================================*/
#define Sin(a)			(s16Sin_Cos[((abs((a)))&0xFF)])
#define Cos(a)			(s16Sin_Cos[((abs((a)+64))&0xFF)])
#define Tan(a)			(FPDIV(sin(a), cos(a)))
#define ABS				abs
#define ATAN2(a,b)		(atan2(float(a)/256, float(b)/256))
#define SIGN(a)			(a&((~0)-((unsigned)~0>>1)))
#define IS_POS(a)		(!SIGN(a))
#define IS_NEG(a)		(SIGN(a))
/*==============================================================================================================*/
/*==============================================================================================================*/
#endif	// _MATHFP_H_
